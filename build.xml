<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 0.3.7.0.6
  on date January 24 2007, time 1801-->

<project default="jar" name="atlassian-jira-mercurial-plugin" basedir=".">
  <property name="defaulttargetdir" value="target">
  </property>
  <property name="libdir" value="target/lib">
  </property>
  <property name="classesdir" value="target/classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="distdir" value="dist">
  </property>
  <property name="javadocdir" value="dist/docs/api">
  </property>
  <property name="final.name" value="atlassian-jira-mercurial-plugin-0.3.7.0.6">
  </property>
  <path id="build.classpath">
    <fileset dir="${libdir}">
      <include name="**/*.jar">
      </include>
    </fileset>
  </path>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <!--Test if JUNIT is present in ANT classpath-->

    <available property="Junit.present" classname="junit.framework.Test">
    </available>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/java">
        </pathelement>
      </src>
      <classpath refid="build.classpath">
      </classpath>
    </javac>
    <copy todir="${classesdir}">
      <fileset dir="src/etc">
        <include name="**/*">
        </include>
        <exclude name="mercurial-jira-plugin.properties">
        </exclude>
      </fileset>
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*">
      </fileset>
    </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
  </target>
  <target name="junit-present" unless="Junit.present" depends="init">
    <echo>================================= WARNING ================================</echo>
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
    <echo>==========================================================================</echo>
  </target>
  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2006-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  XenSource, Inc. All Rights Reserved.">
    </property>
    <property name="title" value="JIRA Mercurial plugin 0.3.7.0.6 API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/java" packagenames="com.xensource.jira.plugin.ext.mercurial.*">
      <classpath>
        <path refid="build.classpath">
        </path>
      </classpath>
    </javadoc>
  </target>
  <target name="get-deps" unless="noget" depends="init">
    <!--Proxy settings works only with a JDK 1.2 and higher.-->

    <setproxy>
    </setproxy>
    <get dest="${libdir}/atlassian-jira-3.7.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/atlassian-jira/jars/atlassian-jira-3.7.1.jar">
    </get>
    <get dest="${libdir}/atlassian-plugins-0.3.17.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/atlassian-plugins/jars/atlassian-plugins-0.3.17.jar">
    </get>
    <get dest="${libdir}/atlassian-core-2.4.9.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/atlassian-core/jars/atlassian-core-2.4.9.jar">
    </get>
    <get dest="${libdir}/atlassian-configurableobjects-0.4.21.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/atlassian-configurableobjects/jars/atlassian-configurableobjects-0.4.21.jar">
    </get>
    <get dest="${libdir}/atlassian-ofbiz-0.3.6.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/atlassian-ofbiz/jars/atlassian-ofbiz-0.3.6.jar">
    </get>
    <get dest="${libdir}/osuser-1.0-dev-log4j-1.4jdk-7Dec05.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/osuser/jars/osuser-1.0-dev-log4j-1.4jdk-7Dec05.jar">
    </get>
    <get dest="${libdir}/log4j-1.2.8.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/log4j/jars/log4j-1.2.8.jar">
    </get>
    <get dest="${libdir}/commons-collections-3.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/commons-collections/jars/commons-collections-3.1.jar">
    </get>
    <get dest="${libdir}/ofbcore-share-2.1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/ofbcore/jars/ofbcore-share-2.1.1.jar">
    </get>
    <get dest="${libdir}/ofbcore-entity-2.1.1-atlassian-20Dec05.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/ofbcore/jars/ofbcore-entity-2.1.1-atlassian-20Dec05.jar">
    </get>
    <get dest="${libdir}/ofbcore-service-2.1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/ofbcore/jars/ofbcore-service-2.1.1.jar">
    </get>
    <get dest="${libdir}/ofbcore-extutil-2.1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/ofbcore/jars/ofbcore-extutil-2.1.1.jar">
    </get>
    <get dest="${libdir}/webwork-1.4.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/webwork/jars/webwork-1.4.jar">
    </get>
    <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/junit/jars/junit-3.8.1.jar">
    </get>
    <get dest="${libdir}/jmock-1.0.1.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/jmock/jars/jmock-1.0.1.jar">
    </get>
    <get dest="${libdir}/lucene-1.4.3.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/lucene/jars/lucene-1.4.3.jar">
    </get>
    <get dest="${libdir}/osworkflow-17Aug2004.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/osworkflow/jars/osworkflow-17Aug2004.jar">
    </get>
    <get dest="${libdir}/propertyset-1.3.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/propertyset/jars/propertyset-1.3.jar">
    </get>
    <get dest="${libdir}/picocontainer-1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/picocontainer/jars/picocontainer-1.0.jar">
    </get>
    <get dest="${libdir}/oscore-2.2.6-dev-9Nov05.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/oscore/jars/oscore-2.2.6-dev-9Nov05.jar">
    </get>
    <get dest="${libdir}/commons-lang-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://repository.atlassian.com/commons-lang/jars/commons-lang-2.0.jar">
    </get>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>